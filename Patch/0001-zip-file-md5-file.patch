From 10835186630e46841a23afc1374c042b78a25e9f Mon Sep 17 00:00:00 2001
From: liyonghelpme <liyonghelpme@gmail.com>
Date: Sat, 4 May 2013 11:35:49 +0800
Subject: [PATCH 1/4] =?UTF-8?q?=E8=87=AA=E5=8A=A8=E7=94=9F=E6=88=90=20zip?=
 =?UTF-8?q?=20file=20=E5=92=8C=20md5=20=E7=89=88=E6=9C=AC=E5=80=BCfile?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 cocos2dx/support/zip_support/unzip.h |  2 +-
 nozomi/Classes/AppDelegate.cpp       | 63 ++++++++++++++++++++++++++++++++++--
 nozomi/Classes/AppDelegate.h         |  8 +++++
 nozomi/Resources/genZipAndMd5.py     | 35 ++++++++++++++++++++
 4 files changed, 105 insertions(+), 3 deletions(-)
 create mode 100644 nozomi/Resources/genZipAndMd5.py

diff --git a/cocos2dx/support/zip_support/unzip.h b/cocos2dx/support/zip_support/unzip.h
index 54a02bc..a3b6b57 100644
--- a/cocos2dx/support/zip_support/unzip.h
+++ b/cocos2dx/support/zip_support/unzip.h
@@ -241,7 +241,7 @@ int ZEXPORT unzGoToFirstFile64 OF((unzFile file,
   return UNZ_OK if there is no problem
 */
 
-int ZEXPORT unzGoToNextFile OF((unzFile file));
+int ZEXPORT unzGoToNextFile (unzFile file);
 /*
   Set the current file of the zipfile to the next file.
   return UNZ_OK if there is no problem
diff --git a/nozomi/Classes/AppDelegate.cpp b/nozomi/Classes/AppDelegate.cpp
index 9020bb2..77954e8 100644
--- a/nozomi/Classes/AppDelegate.cpp
+++ b/nozomi/Classes/AppDelegate.cpp
@@ -39,9 +39,10 @@ bool AppDelegate::applicationDidFinishLaunching()
     
 
     // register lua engine
-    CCLuaEngine* pEngine = CCLuaEngine::defaultEngine();
-    CCScriptEngineManager::sharedManager()->setScriptEngine(pEngine);
+    //CCLuaEngine* pEngine = CCLuaEngine::defaultEngine();
+    //CCScriptEngineManager::sharedManager()->setScriptEngine(pEngine);
 
+/*
 #if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID)
     //pEngine->addSearchPath("assets");
     //需要实际路径 因为zip 打开的是 整个apk文件 其中lua文件在assets中
@@ -55,6 +56,9 @@ bool AppDelegate::applicationDidFinishLaunching()
     pEngine->addSearchPath(path.substr(0, path.find_last_of("/")).c_str());
     pEngine->executeScriptFile(path.c_str());
 #endif
+*/
+    //脚本自动检测更新
+    updateFiles();
     return true;
 }
 
@@ -73,3 +77,58 @@ void AppDelegate::applicationWillEnterForeground()
 
     SimpleAudioEngine::sharedEngine()->resumeBackgroundMusic();
 }
+
+
+static AssetsManager *pAssetsManager = NULL;
+void AppDelegate::updateFiles() {
+	pathToSave = CCFileUtils::sharedFileUtils()->getWriteablePath();
+    cout << "pathToSave "<< pathToSave << endl;
+    if(pAssetsManager == NULL) {
+        //CCLOG("pathToSave %s", pathToSave);
+
+		pAssetsManager = new AssetsManager("http://localhost/test1.zip", "http://localhost/version");
+	}
+    //没有脚本更新 或者下载失败
+    bool suc = false;
+    if(pAssetsManager->checkUpdate()) {
+        if(pAssetsManager->update()) {
+		    suc = true;
+            CCLOG("suc runLua file ");
+		}
+    } 
+    loadScript();
+	if(!suc){
+        //如何将cache 目录加入到 路径搜索目录中呢？？
+        /*
+		CCArray *searchPath = CCFileUtils::sharedFileUtils()->getSearchPath();
+		
+		searchPath->addObject(CCString::create(pathToSave));
+		CCFileUtils::sharedFileUtils()->setSearchPath(searchPath);
+        
+		cout << "search Path length " << searchPath->count() << endl;
+		for(int i = 0; i < searchPath->count(); i++) {
+			CCString *path = (CCString*)searchPath->objectAtIndex(i);
+			cout << " searchPath " << path->getCString() << endl;
+		}
+		CCArray *searchRes = CCFileUtils::sharedFileUtils()->getSearchResolutionsOrder();
+        cout << "search resolution " << searchRes->count() << endl;
+
+		for(int i = 0; i < searchRes->count(); i++) {
+			CCString *path = (CCString *)searchRes->objectAtIndex(i);
+			cout << "search Res " << path->getCString() << endl;
+		}
+        */
+
+
+	}
+}
+
+void AppDelegate::loadScript() {
+    CCLuaEngine *pEngine = CCLuaEngine::defaultEngine();
+    CCScriptEngineManager::sharedManager()->setScriptEngine(pEngine);
+
+    pEngine->addSearchPath(pathToSave.c_str());
+    string runLua = pathToSave+"test2.lua";
+    cout << "run lua file " << runLua << endl;
+    pEngine->executeScriptFile(runLua.c_str());
+}
\ No newline at end of file
diff --git a/nozomi/Classes/AppDelegate.h b/nozomi/Classes/AppDelegate.h
index bcbd54a..efd1ea8 100644
--- a/nozomi/Classes/AppDelegate.h
+++ b/nozomi/Classes/AppDelegate.h
@@ -2,6 +2,11 @@
 #define __APP_DELEGATE_H__
 
 #include "cocos2d.h"
+#include "AssetsManager.h"
+#include "cocos2d_ext.h"
+using namespace std;
+using namespace cocos2d;
+using namespace extension;
 
 /**
 @brief    The cocos2d Application.
@@ -11,7 +16,10 @@ The reason for implement as private inheritance is to hide some interface call b
 class  AppDelegate : private cocos2d::CCApplication
 {
 public:
+    string pathToSave;
+    void updateFiles();
     AppDelegate();
+    void loadScript();
     virtual ~AppDelegate();
 
     /**
diff --git a/nozomi/Resources/genZipAndMd5.py b/nozomi/Resources/genZipAndMd5.py
new file mode 100644
index 0000000..61d2f43
--- /dev/null
+++ b/nozomi/Resources/genZipAndMd5.py
@@ -0,0 +1,35 @@
+#coding:utf8
+import zipfile
+import hashlib
+import os
+def tranverse(cur):
+    ret = []
+    files = os.listdir(cur)
+    for i in files:
+        name = os.path.join(cur, i)
+        if os.path.isdir(name):
+            n = tranverse(name)
+            ret += n
+        elif name[-4:] == '.lua':
+            ret.append(name)
+    return ret
+allLuaFile = tranverse('.')
+print allLuaFile
+
+zipFile = zipfile.ZipFile('test1.zip', 'w')
+for i in allLuaFile:
+    zipFile.write(i)
+zipFile.commet = "test zip"
+zipFile.close()
+
+
+m = hashlib.md5()
+f = open('test1.zip').read()
+m.update(f)
+nf = open('version', 'w')
+nf.write(m.hexdigest())
+nf.close()
+
+os.system('mv test1.zip ../')
+os.system('mv version ../')
+
-- 
1.8.1.msysgit.1

